import Swal from 'sweetalert2';
import { CheckoutService } from './../../../services/checkout.service';
import { Component, OnInit, OnDestroy, DoCheck, Inject, PLATFORM_ID } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
import { ProductosService } from 'src/app/services/productos.service';
import { UsuarioModel } from 'src/app/models/usuario.models';
import { RegistroService } from 'src/app/services/registro.service';
import { NgForm } from '@angular/forms';
import { CarritoService } from 'src/app/services/carrito.service';
import { map } from 'rxjs/operators';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Router } from '@angular/router';
declare var Mercadopago: any;

@Component({
  selector: 'app-checkout',
  templateUrl: './checkout.component.html',
  styleUrls: ['./checkout.component.css']
})
export class CheckoutComponent implements OnInit, OnDestroy, DoCheck {
  checkout = {
    name_lastname: '',
    dni: '',
    pais_id: 'Argentina',
    calle: '',
    numero: 0,
    cp: '',
    provincia: '',
    ciudad: '',
    telefono: '',
    email: '',
    user_id: '',
    totalOrden: 0,
    prods: []
  };

  datosMP = {
    total: 0,
    token: '',
    description: '',
    cuotas: 0,
    emisorTarjeta: '',
    email: '',
    calle: '',
    numero: 0,
    cp: '',
    provincia: '',
    ciudad: ''
  };

  productosCarrito = [];
  subTotal = 0;
  envio = {
    costo: 0,
    entrega: '',
    laplata: 60
  };

  oculto = false;
  contenido = "";
  tituloPag = "";

  tipoDocumentos = [];
  cargandoInfoMP = true;
  opcionDoc = '';
  tarjetasCreditoDisponibles: any = [];
  cuotasDisponibles: any = [];
  esPagoConCredito = false;
  tarjetasDebitoDisponibles: any = [];
  esPagoConDebito = false;
  pagoEnEfectivo: any = [];
  esPagoEnEfectivo = false;
  esPagoPorDomicilio = false;

  constructor(
    @Inject(PLATFORM_ID) private platformId: Object,
    private productosService: ProductosService,
    private registroService: RegistroService,
    private carritoService: CarritoService,
    private checkoutService: CheckoutService,
    private http: HttpClient,
    private router: Router
  ) {
    
    if (isPlatformBrowser(this.platformId)) {
      this.registroService
      .getUsuario(localStorage.getItem('userId'))
      .subscribe((user: any) => {
        this.checkout.name_lastname = user.name + ' ' + user.lastname;
        // this.checkout.lastname = user.lastname;
        this.checkout.email = user.email;
      });
    }

    let carritos: any;
    carritos = this.carritoService.getCarrito();

    setTimeout(() => {
      if (Mercadopago) {
        Mercadopago.setPublishableKey(
          'APP_USR-e5f44d7a-86b1-429f-8fbd-6c9c231dfae9'
          // 'TEST-0dd0d31e-809e-4bb1-89c7-29742cf40abe'
        );
        Mercadopago.getIdentificationTypes((status, docs) => {
          if (status !== 200) {
            console.error(status, 'error');
          } else {
            this.tipoDocumentos = docs;
          }
        });
      } else {
        console.error('No existe Mercadopago');
      }
    }, 500);

    // empieza integracion de mercadopago
    setTimeout(() => {
      this.cargandoInfoMP = true;

      // llamo a todos los medios de pago
      setTimeout(() => {
        if (isPlatformBrowser(this.platformId)) {
          const todosLosMediosDePago = JSON.parse(
            localStorage.getItem('mediosDePago')
          );
          todosLosMediosDePago.forEach(medio => {
            if (
              medio.payment_type_id === 'credit_card' &&
              medio.status !== 'testing'
            ) {
              this.tarjetasCreditoDisponibles.push(medio);
            }
            if (
              medio.payment_type_id === 'debit_card' &&
              medio.status !== 'testing'
            ) {
              this.tarjetasDebitoDisponibles.push(medio);
            }
            if (
              medio.payment_type_id === 'ticket' &&
              medio.status !== 'testing'
            ) {
              this.pagoEnEfectivo.push(medio);
            }
          });
        }
      }, 1000);

    }, 1000);
  }

  // calcularEnvio(zipCode) {
  //   const dimensions = '30x30x30';
  //   const peso = '800';
  //   const zip_code = zipCode.value;
  //   const item_price = this.subTotal;
  //   let urlAPI = "https://genovevabe.cf/api";
  //   // let urlAPI = "http://127.0.0.1:8000/api";

  //   const url = `${urlAPI}/calcularenvio/${dimensions}/${peso}/${zip_code}/${item_price}`;
  //   // const url = `${urlAPI}/${dimensions}/${peso}/${zip_code}/${item_price}`;

  //   this.http.get(url).pipe().subscribe((res: any) => {
  //     console.log(res);
      
  //     if (res.body.message) {
  //       if (res.body.message.includes('Invalid')) {
  //         Swal.fire({
  //           title: 'No existe ese CÃ³digo Postal'
  //         }).then( () => {
  //           zipCode.value = '';
  //         });
  //         this.envio.costo = 0;
  //         this.envio.entrega = '';
  //       }
  //     } else {
  //       this.envio.costo = res.body.options[0].cost;
  //       this.envio.entrega = res.body.options[0].estimated_delivery_time.shipping + ' horas';
  //       return res;
  //     }
  //   });

  // }

  enviarPago(datos: any) {
    let urlAPI = "https://genovevabe.cf/api";
    // let urlAPI = "http://127.0.0.1:8000/api";
    const url = `${urlAPI}/pagarMP`;

    const body = JSON.stringify(datos);
    const headers = new HttpHeaders({
      'Content-Type': 'application/json'
    });

    return this.http.post(url, body, { headers }).pipe(
      map(res => {
        return res;
      })
    );
  }

  funcionesMercadoPago(tipoDeCompra) {
    // funcionesMercadoPago(tipoDeCompra, dentroCasco?) {
    let datos = this.datosMP;
    let infoEnvio = this.checkout;
    const usarFunciones = this;
    // obtener numero de tarjeta
    function getBin() {
      const numeroTC: any = document.querySelector(
        'input[data-checkout="cardNumber"]'
      );

      return numeroTC.value.replace(/[ .-]/g, '').slice(0, 6);
    }

    // funcion para adivinar el tipo de pago
    function guessingPaymentMethod(event) {
      const bin = getBin();
      let amount;
      // if (dentroCasco.checked) {
      //   amount = usarFunciones.subTotal + usarFunciones.envio.laplata;
      // } else {
      //   // esto funcionaba asi cuando se usaba mercado envios
      //   // amount = usarFunciones.subTotal + usarFunciones.envio.costo;
      //   amount = usarFunciones.subTotal;
      // }
      amount = usarFunciones.subTotal
      console.log(bin);
      if (event.type == 'keyup') {
        if (bin.length >= 6) {
          Mercadopago.getPaymentMethod(
            {
              bin
            },
            setPaymentMethodInfo
          );

          Mercadopago.getInstallments(
            {
              bin,
              amount
            },
            setInstallmentInfo
          );
        }
      } else {
        setTimeout(function() {
          if (bin.length >= 6) {
            Mercadopago.getPaymentMethod(
              {
                bin
              },
              setPaymentMethodInfo
            );

            Mercadopago.getInstallments(
              {
                bin,
                amount
              },
              setInstallmentInfo
            );
          }
        }, 100);
      }
    }

    // para pagos en cuotas
    function setInstallmentInfo(status, response) {
      let issuer_id;
      const cuotas: any = [];

      if (status == 200 || status == 201) {
        response.forEach(element => {
          if (element.issuer) {
            issuer_id = element.issuer.id;
          }

          if (element.payer_costs) {
            element.payer_costs.forEach(costoPagador => {
              cuotas.push({
                cantidad: costoPagador.installments,
                totalConInteres: costoPagador.total_amount,
                mensaje: costoPagador.recommended_message
              });
            });
          }
        });
      } else {
        alert(`error: ${response}`);
      }

      usarFunciones.cuotasDisponibles = cuotas;
    }

    let emisorTarjeta = '';
    function setPaymentMethodInfo(status, response) {
      // console.log(response[0].id); // visa master etc
      // pone el nombre de la tarjeta en el value
      if (status == 200) {
        const paymentMethodElement: any = document.querySelector(
          'input[name=paymentMethodId]'
        );

        const form: any = document.querySelector('#pay');

        if (paymentMethodElement) {
          paymentMethodElement.value = response[0].id;
          emisorTarjeta = response[0].id;
        } else {
          const inputEl = document.createElement('input');
          inputEl.setAttribute('name', 'paymentMethodId');
          inputEl.setAttribute('type', 'hidden');
          inputEl.setAttribute('value', response[0].id);
          emisorTarjeta = response[0].id;

          form.appendChild(inputEl);
        }
      } else {
        alert(`payment method info error: ${response}`);
      }
    }

    function addEvent(el, eventName, handler) {
      if (el.addEventListener) {
        el.addEventListener(eventName, handler);
      } else {
        el.attachEvent('on' + eventName, function() {
          handler.call(el);
        });
      }
    }

    if (document.querySelector('input[data-checkout="cardNumber"]')) {
      addEvent(
        document.querySelector('input[data-checkout="cardNumber"]'),
        'keyup',
        guessingPaymentMethod
      );
      addEvent(
        document.querySelector('input[data-checkout="cardNumber"]'),
        'change',
        guessingPaymentMethod
      );
    }

    // addEvent(document.querySelector('input[data-checkout="cardNumber"]'),'keyup', guessingPaymentMethod);
    // addEvent(document.querySelector('input[data-checkout="cardNumber"]'),'change', guessingPaymentMethod);

    let doSubmit = false;
    addEvent(document.querySelector(tipoDeCompra), 'click', doPay);
    function doPay(event) {
      event.preventDefault();
      if (!doSubmit) {
        const $form = document.querySelector('#pay');
        Mercadopago.createToken($form, sdkResponseHandler); // The function "sdkResponseHandler" is defined below

        return false;
      }
    }

    function sdkResponseHandler(status, response) {
      // console.log(status);
      // console.log(response);
      // console.log(response.id); // token
      if (status != 200 && status != 201) {
        // alert('verify filled data');
        Swal.fire({
          title: 'Hubo un problema al procesar el pago'
        });
      } else {
        // aca debe ir la validacion de los campos del envio
        let checkTerm = true;
        let noHayVacios = true;
        let term: any = document.querySelector('.terminos');
        if (term.checked === false) {
          checkTerm = false;
        }
        let form: any = document.querySelectorAll('.validate');
        for (const campo in form) {
          if (form.hasOwnProperty(campo)) {
            const element = form[campo];
            if (element.value === '' || element.value === null || element.value == 0) {
              noHayVacios = false;
            }
          }
        }
        if (noHayVacios === false || checkTerm === false) {
          if (checkTerm === false) {
            Swal.fire({
              title: 'Tenes que aceptar los Terminos y Condiciones'
            }).then(result => {
              if (result) {
                return;
              }
            });
          }
          if (noHayVacios === false) {
            Swal.fire({
              title: 'Tenes que completar todos los campos'
            }).then(result => {
              if (result) {
                return;
              }
            });
          }
        } else {
          if (
            tipoDeCompra === '.comprarCredito' ||
            tipoDeCompra === '.comprarDebito'
          ) {

            let noHayVacios = true;
            let formTarjeta: any = document.querySelectorAll('.validateCard');

            for (const campo in formTarjeta) {
              if (formTarjeta.hasOwnProperty(campo)) {
                const element = formTarjeta[campo];
                if (element.value === '' || element.value === null) {
                  noHayVacios = false;
                }
              }
            }

            if (noHayVacios === false) {
              Swal.fire({
                title: 'Tenes que completar todos los campos'
              }).then(result => {
                if (result) {
                  return;
                }
              });
            } else {
              Swal.fire({
                title: 'Estamos procesando tu pago',
                timer: 3000,
                onBeforeOpen: () => {
                  Swal.showLoading();
                }
              });
              const form: any = document.querySelector('#pay');
              const card: any = document.createElement('input');
              card.setAttribute('name', 'token');
              card.setAttribute('type', 'hidden');
              card.setAttribute('value', response.id);
              datos.token = response.id;
              form.appendChild(card);
              doSubmit = true;
              if (document.querySelector('#cuotas')) {
                const selectCuotas: any = document.querySelector('#cuotas');
                datos.cuotas = selectCuotas.value;
              } else {
                datos.cuotas = 1;
              }
              datos.description = 'Genoveva Shop Online';
              const email: any = document.querySelector('#email');
              datos.email = email.value;
              // datos.total = 12;
              let totalFinal;
              // if (dentroCasco.checked) {
              //   totalFinal = usarFunciones.subTotal + usarFunciones.envio.laplata;
              // } else {
              //   // esto funcionaba asi cuando se usaba mercado envios
              //   // totalFinal = usarFunciones.subTotal + usarFunciones.envio.costo;
              //   totalFinal = usarFunciones.subTotal;
              // }
              totalFinal = usarFunciones.subTotal
              let formEnvio: any = document.querySelectorAll('.validate');
              datos.total = totalFinal;
              datos.emisorTarjeta = emisorTarjeta;
              datos.calle = formEnvio[6].value;
              datos.numero = formEnvio[7].value;
              datos.cp = formEnvio[5].value;
              datos.provincia = formEnvio[4].value;
              datos.ciudad = formEnvio[3].value;
              let prodsIdsTalles = [];
              // let prodsIds = [];
              let prods = [{
                id: 0,
                titulo: ''
              }];
              let carritos = usarFunciones.carritoService.getCarrito();
              carritos.forEach(prodCarrito => {
                prodsIdsTalles.push({
                  id: prodCarrito.productId,
                  talle_id: prodCarrito.talle_id
                });
              });
              usarFunciones.productosCarrito.forEach(producto => {
                // prodsIds.push(producto.id);
                prods.push({
                  id: producto.id,
                  titulo: producto.titulo
                });
              });
              console.log(prodsIdsTalles);
              let usuarioId;
              
              if (isPlatformBrowser(usarFunciones.platformId)) {
                usuarioId = localStorage.getItem('userId')
              }
              infoEnvio = {
                prods: prodsIdsTalles,
                // name: formEnvio.form.controls.name.value,
                name_lastname: formEnvio[0].value,
                user_id: usuarioId,
                dni: formEnvio[1].value,
                // lastname: formEnvio.form.controls.lastname.value,
                pais_id: formEnvio[2].value,
                // direccion1: formEnvio[6].value,
                calle: formEnvio[6].value,
                numero: formEnvio[7].value,
                // direccion2: formEnvio.form.controls.direccion2.value,
                cp: formEnvio[5].value,
                // cp: formEnvio.form.controls.cp.value,
                provincia: formEnvio[3].value,
                // provincia: formEnvio.form.controls.provincia.value,
                ciudad: formEnvio[4].value,
                // ciudad: formEnvio.form.controls.ciudad.value,
                telefono: formEnvio[8].value,
                // telefono: formEnvio.form.controls.telefono.value,
                email: formEnvio[9].value,
                totalOrden: datos.total,
                // email: formEnvio.form.controls.email.value,
              };

              usarFunciones.checkoutService.realizarPedido(infoEnvio).subscribe((respuesta: any) => {
                if (respuesta.noStock) {
                  let titulo = '';
                  let talle = '';
                  prods.forEach((prod: any) => {
                    if (prod.id == respuesta.noStock) {
                      titulo = prod.titulo;
                      talle = respuesta.talle;
                    }
                  });
                  Swal.fire({
                    title: 'Se acaba de agotar',
                    text: 'No hay stock de: ' + titulo + ' - Talle: ' + talle + '. \n\n Si estas comprando mas de 1 probÃ¡ con otra cantidad'
                  }).then(() => {
                    location.reload();
                    return;
                  });
                } else {
                  usarFunciones.enviarPago(datos).subscribe((res: any) => {

                    if (res.estado === 'approved') {
                      Swal.fire({
                        title: 'El pago fue aprobado'
                      }).then(result => {
                        // usarFunciones.router.navigate(['/perfil/', localStorage.getItem('userId')]).then(() => {
                        usarFunciones.router.navigate(['/perfil/', usuarioId]).then(() => {
                          location.reload();
                        });
                      });
                    }

                    if (res.estado === 'rejected') {
                      Swal.fire({
                        title:
                          'El pago fue rechazado, proba con otra tarjeta'
                      });
                      let info = {
                        prods: infoEnvio.prods
                      };
                      console.log(info);
                      usarFunciones.checkoutService.acomodarStock(info).subscribe( res => {
                        console.log(res);
                      });
                      // usarFunciones.checkoutService.borrarPedido(localStorage.getItem('userId')).subscribe( res => {
                      usarFunciones.checkoutService.borrarPedido(usuarioId).subscribe( res => {
                        console.log(res);
                        setTimeout(() => {
                          location.reload();
                        }, 2000);
                      });
                    }

                    if (res.estado === 'in_process') {
                      Swal.fire({
                        title: 'Estamos procesando el pago'
                      });
                    }

                    return res;
                  });
                }
              });
            }
          }

          if (tipoDeCompra === '.comprarEfectivo') {
            let mail: any = document.querySelector('.mailEfectivo');
            if (mail.value === '' || mail.value === null) {
              Swal.fire({
                title: 'El mail es obligatorio',
              });
              return;
            }
            let medioPago: any = document.querySelector('#medioPagoEfectivo');
            if (medioPago.value === '' || medioPago.value === null) {
              Swal.fire({
                title: 'Tenes que seleccionar una empresa',
              });
              return;
            }
            Swal.fire({
              title: 'Estamos procesando tu pago',
              timer: 3000,
              onBeforeOpen: () => {
                Swal.showLoading();
              }
            });
            const form: any = document.querySelector('#pay');
            const card: any = document.createElement('input');
            card.setAttribute('name', 'token');
            card.setAttribute('type', 'hidden');
            card.setAttribute('value', response.id);
            form.appendChild(card);
            doSubmit = true;
            let dataEfectivo: any = {};
            let medioDePago: any = document.querySelector('#medioPagoEfectivo');
            let email: any = document.querySelector('#email');
            let formEnvio: any = document.querySelectorAll('.validate');
            console.log(formEnvio);
            let totalFinal;
            // if (dentroCasco.checked) {
            //   totalFinal = usarFunciones.subTotal + usarFunciones.envio.laplata;
            // } else {
            //   // esto funcinaba asi cuando se usaba mercado envios
            //   // totalFinal = usarFunciones.subTotal + usarFunciones.envio.costo;
            //   totalFinal = usarFunciones.subTotal;
            // }
            totalFinal = usarFunciones.subTotal;
            console.log(formEnvio);
            dataEfectivo = {
              metodo: medioDePago.value,
              email: email.value,
              total: totalFinal,
              descripcion: 'Genoveva Shop Online',
              calle: formEnvio[6].value,
              numero: formEnvio[7].value,
              cp: formEnvio[5].value,
              provincia: formEnvio[4].value,
              ciudad: formEnvio[3].value,
            };
            let prodsIdsTalles = [];
            // let prodsIds = [];
            let prods = [{
              id: 0,
              titulo: ''
            }];
            let carritos = usarFunciones.carritoService.getCarrito();
            carritos.forEach(prodCarrito => {
              prodsIdsTalles.push({
                id: prodCarrito.productId,
                talle_id: prodCarrito.talle_id
              });
            });
            usarFunciones.productosCarrito.forEach(producto => {
              // prodsIds.push(producto.id);
              prods.push({
                id: producto.id,
                titulo: producto.titulo
              });
            });
            console.log(prodsIdsTalles);
            let usuarioId = '';
            if (isPlatformBrowser(usarFunciones.platformId)) {
              usuarioId = localStorage.getItem('userId')
            }
            infoEnvio = {
              // productosIds: prodsIds,
              prods: prodsIdsTalles,
              // name: formEnvio.form.controls.name.value,
              name_lastname: formEnvio[0].value,
              user_id: usuarioId,
              dni: formEnvio[1].value,
              // lastname: formEnvio.form.controls.lastname.value,
              pais_id: formEnvio[2].value,
              // direccion1: formEnvio[6].value,
              calle: formEnvio[6].value,
              numero: formEnvio[7].value,
              // direccion2: formEnvio.form.controls.direccion2.value,
              cp: formEnvio[5].value,
              // cp: formEnvio.form.controls.cp.value,
              provincia: formEnvio[3].value,
              // provincia: formEnvio.form.controls.provincia.value,
              ciudad: formEnvio[4].value,
              // ciudad: formEnvio.form.controls.ciudad.value,
              telefono: formEnvio[8].value,
              // telefono: formEnvio.form.controls.telefono.value,
              email: formEnvio[9].value,
              totalOrden: dataEfectivo.total,
              // email: formEnvio.form.controls.email.value,
            };
            console.log(infoEnvio);

            usarFunciones.checkoutService.realizarPedido(infoEnvio).subscribe((respuesta: any) => {
              if (respuesta.noStock) {
                let titulo = '';
                let talle = '';
                prods.forEach((prod: any) => {
                  if (prod.id == respuesta.noStock) {
                    titulo = prod.titulo;
                    talle = respuesta.talle;
                  }
                });
                Swal.fire({
                  title: 'Se acaba de agotar',
                  text: 'No hay stock de: ' + titulo + ' - Talle: ' + talle + '. \n\n Si estas comprando mas de 1 probÃ¡ con otra cantidad'
                }).then(() => {
                  location.reload();
                  return;
                });
              } else {
                usarFunciones.enviarPago(dataEfectivo).subscribe((res: any) => {
                  console.log(res);
                  if (res.estado === 'pending') {
                    Swal.fire({
                      title:
                        'Se te abrirÃ¡ una ventana para que puedas imprimir o descargar el tiquet de pago'
                    }).then(result => {
                      window.open(res.recursoExterno, '_blank');
                      usarFunciones.checkoutService.realizarPedido(infoEnvio).subscribe(respuesta => {
                        console.log(respuesta);
                        return respuesta;
                      });
                      // usarFunciones.router.navigate(['/perfil/', localStorage.getItem('userId')]).then(() => {
                      usarFunciones.router.navigate(['/perfil/', usuarioId]).then(() => {
                        location.reload();
                      });
                    });
                  }
                  return res;
                }, (error: any) => {
                  console.log(error);
                  if (error) {
                    Swal.fire({
                      title: 'Hubo un error a la hora de procesar el pago'
                    });
                    let info = {
                      prods: infoEnvio.prods
                    };
                    console.log(info);
                    usarFunciones.checkoutService.acomodarStock(info).subscribe( res => {
                      console.log(res);
                    });
                    usarFunciones.checkoutService.borrarPedido(usuarioId).subscribe( res => {
                      console.log(res);
                      setTimeout(() => {
                        location.reload();
                      }, 2000);
                    });
                  }
                });
              }
            });
          }
        }
      }
    }
  }

  validarFormEnvio() {
    let hayVacios = false;
    let term: any = document.querySelector('.terminos');

    let form: any = document.querySelectorAll('.validate');
    for (const campo in form) {
      if (form.hasOwnProperty(campo)) {
        const element = form[campo];
        if (element.value === '' || element.value === null) {
          console.log('hay vacios');
          hayVacios = true;
        }
      }
    }

    if (term.checked === false) {
      hayVacios = true;
    }
    
    // if (term.checked === false) {
    //   console.log('entra 1');
    //   Swal.fire({
    //     title: 'Tenes que aceptar los Terminos y Condiciones'
    //   }).then(result => {
    //     if (result) {
    //       console.log('entra 2');
    //       noHayVacios = false;
    //       return;
    //     }
    //   });
    // }
    // let form: any = document.querySelectorAll('.validate');
    // for (const campo in form) {
    //   if (form.hasOwnProperty(campo)) {
    //     const element = form[campo];
    //     if (element.value === '' || element.value === null) {
    //       Swal.fire({
    //         title: 'Tenes que completar todos los campos'
    //       }).then(result => {
    //         if (result) {
    //           noHayVacios = false;
    //           // return;
    //         }
    //       });
    //     }
    //   }
    // }
    return hayVacios;
  }

  esTierraDelFuego(zipCode){
    if (zipCode.value == 9410) {
      Swal.fire({
        title: 'Lo sentimos',
        text: 'OCA no estÃ¡ realizando envÃ­os a Tierra del Fuego por el momento',
        type: 'error',
      }).then( () => {
        zipCode.value = '';
      })
    }
  }

  verTerminosCondiciones(){
    Swal.fire({
      title: '<strong>TERMINOS Y CONDICIONES</strong>',
      type: 'info',
      html:
        '<div class="container">' +
          '<div class="row justify-content-center">' +
            '<div class="col-12">' +
              '<div class="regular-page-content-wrapper section-padding-80">' +
                '<div class="regular-page-text">' +
                  '<h2>TÃRMINOS DE SERVICIO</h2>' +
                  '<h5>INFORMACIÃN GENERAL</h5>' +
                  '<p>' +
                    'Este sitio web es operado por Genoveva. En todo el sitio, los tÃ©rminos ânosotrosâ, ânosâ y ânuestroâ se refieren a Genoveva. Genoveva ofrece este sitio web, incluyendo toda la informaciÃ³n, herramientas y servicios disponibles para ti en este sitio, el usuario, estÃ¡ condicionado a la aceptaciÃ³n de todos los tÃ©rminos, condiciones, polÃ­ticas y notificaciones aquÃ­ establecidos.' +
                    
                    'Al visitar nuestro sitio y/o comprar algo de nosotros, paticipas en nuestro âServicioâ y aceptas los siguientes tÃ©rminos y condiciones (âTÃ©rminos de Servicioâ, âTÃ©rminosâ), incluÃ­dos todos los tÃ©rminos y condiciones adicionales y las polÃ­tias a las que se hace referencia en el presente documento y/o disponible a travÃ©s de hipervÃ­nculos. Estas Condiciones de Servicio se aplican a todos los usuarios del sitio, incluyendo si limitaciÃ³n a usuarios que sean navegadores, proveedores, clientes, comerciantes, y/o colaboradores de contenido.' +
                    
                    'Por favor, lee estos TÃ©rminos de Servicio cuidadosamente antes de acceder o utilizar nuestro sitio web. Al acceder o utilizar cualquier parte del sitio, estÃ¡s aceptando los TÃ©rminos de Servicio. Si no estÃ¡s de acuerdo con todos los tÃ©rminos y condiciones de este acuerdo, entonces no deberÃ­as acceder a la pÃ¡gina web o usar cualquiera de los servicios. Si las TÃ©rminos de Servicio son considerados una oferta, la aceptaciÃ³n estÃ¡ expresamente limitada a estos TÃ©rminos de Servicio.' +
                    
                    'Cualquier funciÃ³n nueva o herramienta que se aÃ±adan a la tienda actual, tambien estarÃ¡n sujetas a los TÃ©rminos de Servicio. Puedes revisar la versiÃ³n actualizada de los TÃ©rminos de Servicio, en cualquier momento en esta pÃ¡gina. Nos reservamos el derecho de actualizar, cambiar o reemplazar cualquier parte de los TÃ©rminos de Servicio mediante la publicaciÃ³n de actualizaciones y/o cambios en nuestro sitio web. Es tu responsabilidad chequear esta pÃ¡gina periÃ³dicamente para verificar cambios. Tu uso contÃ­nuo o el acceso al sitio web despuÃ©s de la publicaciÃ³n de cualquier cambio constituye la aceptaciÃ³n de dichos cambios.' +
                  '</p>' +
                  '<hr>' +
      
                  '<h5>SECCIÃN 1 - TÃRMINOS DE LA TIENDA EN LÃNEA</h5>' +
                  '<p>' +
                      'Al utilizar este sitio, declaras que tienes al menos la mayorÃ­a de edad en tu estado o provincia de residencia, o que tienes la mayorÃ­a de edad en tu estado o provincia de residencia y que nos has dado tu consentimiento para permitir que cualquiera de tus dependientes menores use este sitio.' +
                      
                      'No puedes usar nuestros productos con ningÃºn propÃ³sito ilegal o no autorizado tampoco puedes, en el uso del Servicio, violar cualquier ley en tu jurisdicciÃ³n (incluyendo pero no limitado a las leyes de derecho de autor).' +
                      
                      'No debes transmitir gusanos, virus o cualquier cÃ³digo de naturaleza destructiva.' +
                      
                      'El incumplimiento o violaciÃ³n de cualquiera de estos TÃ©rminos darÃ¡n lugar al cese inmediato de tus Servicios.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 2 - CONDICIONES GENERALES</h5>' +
                  '<p>' +
                      'Nos reservamos el derecho de rechazar la prestaciÃ³n de servicio a cualquier persona, por cualquier motivo y en cualquier momento.' +
                      
                      'Entiendes que tu contenido (sin incluir la informaciÃ³n de tu tarjeta de crÃ©dito), puede ser transferida sin encriptar e involucrar (a) transmisiones a travÃ©s de varias redes; y (b) cambios para ajustarse o adaptarse a los requisitos tÃ©cnicosde conexiÃ³n de redes o dispositivos. La informaciÃ³n de tarjetas de crÃ©dito estÃ¡ siempre encriptada durante la transferencia a travÃ©s de las redes.' +
                      
                      'EstÃ¡s de acuerdo con no reproducir, duplicar, copiar, vender, revender o explotar cualquier parte del Servicio, usp del Servicio, o acceso al Servicio o cualquier contacto en el sitio web a travÃ©s del cual se presta el servicio, sin el expreso permiso por escrito de nuestra parte.' +
                      
                      'Los tÃ­tulos utilizados en este acuerdo se icluyen solo por conveniencia y no limita o afecta a estos TÃ©rminos.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 3 - EXACTITUD, EXHAUSTVIDAD Y ACTUALIDAD DE LA INFORMACIÃN</h5>' +
                  '<p>' +
                      'No nos hacemos responsables si la informaciÃ³n disponible en este sitio no es exacta, completa o actual.  El material en este sitio es provisto solo para informaciÃ³n general y no debe confiarse en ella o utilizarse como la Ãºnica base para la toma de decisiones sin consultar primeramente, informaciÃ³n mÃ¡s precisa, completa u oportuna.  Cualquier dependencia em el materia de este sitio es bajo su propio riesgo.' +
                      
                      'Este sitio puede contener cierta informaciÃ³n histÃ³rica.  La informaciÃ³n histÃ³rica, no es necesriamente actual y es provista Ãºnicamente para tu referencia.  Nos reservamos el derecho de modificar los contenidos de este sitio en cualquier momento, pero no tenemos obligaciÃ³n de actualizar cualquier informaciÃ³n en nuestro sitio.  Aceptas que es tu responsabilidad de monitorear los cambios en nuestro sitio.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECTION 4 - MODIFICACIONES AL SERVICIO Y PRECIOS</h5>' +
                  '<p> ' +
                      'Los precios de nuestros productos estÃ¡n sujetos a cambio sin aviso.' +
                      
                      'Nos reservamos el derecho de modificar o discontinuar el Servicio (o cualquier parte del contenido) en cualquier momento sin aviso previo.' +
                      
                      'No seremos responsables ante ti o alguna tercera parte por cualquier modificaciÃ³n, cambio de precio, suspensiÃ³n o discontinuidad del Servicio.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 5 - PRODUCTOS O SERVICIOS (si aplicable)</h5>' +
                  '<p>' +
                      'Ciertos productos o servicios puedene star disponibles exclusivamente en lÃ­nea a travÃ©s del sitio web. Estos productos o servicios pueden tener cantidades limitadas y estar sujetas a devoluciÃ³n o cambio de acuerdo a nuestra polÃ­tica de devoluciÃ³n solamente.' +
                      
                      'Hemos hecho el esfuerzo de mostrar los colores y las imÃ¡genes de nuestros productos, en la tienda, con la mayor precisiÃ³n de colores posible.  No podemos garantizar que el monitor de tu computadora muestre los colores de manera exacta.' +
                      
                      'Nos reservamos el derecho, pero no estamos obligados, para limitar las ventas de nuestros productos o servicios a cualquier persona, regiÃ³n geogrÃ¡fica o jurisdicciÃ³n.  Podemos ejercer este derecho basados en cada caso.  Nos reservamos el derecho de limitar las cantidades de los productos o servicios que ofrecemos.  Todas las descripciones de productos o precios de los productos estÃ¡n sujetos a cambios en cualquier momento sin previo aviso, a nuestra sola discreciÃ³n.  Nos reservamos el derecho de discontinuar cualquier producto en cualquier momento.  Cualquier oferta de producto o servicio hecho en este sitio es nulo donde estÃ© prohibido.' +
                      
                      'No garantizamos que la calidad de los productos, servicios, informaciÃ³n u otro material comprado u obtenido por ti  cumpla con tus expectativas, o que cualquier error en el Servicio serÃ¡ corregido.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 6 - EXACTITUD DE FACTURACIÃN E INFORMACIÃN DE CUENTA</h5>' +
                  '<p>' +
                      'Nos reservamos el derecho de rechazar cualquier pedido que realice con nosotros. Podemos, a nuestra discreciÃ³n, limitar o cancelar las cantidades compradas por persona, por hogar o por pedido. Estas restricciones pueden incluir pedidos realizados por o bajo la misma cuenta de cliente, la misma tarjeta de crÃ©dito, y/o pedidos que utilizan la misma facturaciÃ³n y/o direcciÃ³n de envÃ­o.' +
                      
                      'En el caso de que hagamos un cambio o cancelemos una orden, podemos intentar notificarte poniÃ©ndonos en contacto vÃ­a correo electrÃ³nico y/o direcciÃ³n de facturaciÃ³n / nÃºmero de telÃ©fono proporcionado en el momento que se hizo pedido. Nos reservamos el derecho de limitar o prohibir las Ã³rdenes que, a nuestro juicio, parecen ser colocado por los concesionarios, revendedores o distribuidores.' +
                      
                      'Te comprometes a proporcionar informaciÃ³n actual, completa y precisa de la compra y cuenta utilizada para todas las compras realizadasen nuestra tienda.  Te comprometes a ctualizar rÃ¡pidamente tu cuenta y otra informaciÃ³n, incluyendo tu direcciÃ³n de correo electrÃ³nico y nÃºmeros de tarjetas de crÃ©dito y fechas de vencimiento, para que podamos completar tus transacciones y contactarte cuando sea necesario.' +
                      
                      'Para mÃ¡s detalles, por favor revisa nuestra PolÃ­tica de Devoluciones.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 7 - HERRAMIENTAS OPCIONALES</h5>' +
                  '<p>' +
                      'Es posible que te proporcionemos aceso a herramientas de terceros a los cuales no monitoreamos y sobre los que no tenemos control ni entrada.' +
                      
                      'Reconoces y aceptas que proporcionamos acceso a este tipo de herramientas "tal cual" y "segÃºn disponibilidad" sin garantÃ­as, representaciones o condiciones de ningÃºn tipo y sin ningÃºn respaldo.  No tendremos responsabilidad alguna derivada de o relacionada con tu uso de herramientas proporcionadas por terceras partes.' +
                      
                      'Cualquier uso que hagas de las herramientas opcionales que se ofrecen a travÃ©s del sitio bajo tu propio riesgo y discreciÃ³n y debes asegurarte de estar familiarizado y aprobar los tÃ©rminos bajo los cuales estas herramientas son proporcionadas por el o los proveedores de terceros.' +
                      
                      'Tambien es posible que, en el futuro, te ofrezcamos nuevos servicios y/o caracterÃ­sticas a travÃ©s del sitio web (incluyendo el lanzamiento de nuevas herramientas y recursos).  Estas nuevas caraterÃ­sticas y/o servicios tambien estarÃ¡n sujetos a estos TÃ©rminos de Servicio.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 8 - ENLACES DE TERCERAS PARTES</h5>' +
                  '<p>' +
                      'Cierto contenido, productos y servicios disponibles vÃ­a nuestro Servicio puede incluÃ­r material de terceras partes.' +
                      
                      'Enlaces de terceras partes en este sitio pueden direccionarte a sitios web de terceras partes que no estÃ¡n afiliadas con nosotros.  No nos responsabilizamos  de examinar o evaluar el contenido o exactitud y no garantizamos ni tendremos ninguna obligaciÃ³n o responsabilidad por cualquier material de terceros o siitos web, o de cualquier material, productos o servicios de terceros.' +
                      
                      'No nos hacemos responsables de cualquier daÃ±o o daÃ±os relacionados con la adquisiciÃ³n o utilizaciÃ³n de bienes, servicios, recursos, contenidos, o cualquier otra transacciÃ³n realizadas en conexiÃ³n con sitios web de terceros.  Por favor revisa cuidadosamente las polÃ­ticas y prÃ¡cticas de terceros y asegÃºrate de entenderlas antes de participar en cualquier transacciÃ³n.  Quejas, reclamos, inquietudes o pregutas con respecto a productos de terceros deben ser dirigidas a la tercera parte.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 9 - COMENTARIOS DE USUARIO, CAPTACIÃN Y OTROS ENVÃOS</h5>' +
                  '<p>' +
                      'Si, a pedido nuestro, envÃ­as ciertas presentaciones especÃ­ficas (por ejemplo la participaciÃ³n en concursos) o sin un pedido de nuestra parte envÃ­as ideas creativas, sugerencias, proposiciones, planes, u otros materiales, ya sea en lÃ­nea, por email, por correo postal, o de otra manera (colectivamente, "comentarios"), aceptas que podamos, en cualquier momento, sin restricciÃ³n, editar, copiar, publicar, distribuÃ­r, traducir o utilizar por cualquier medio comentarios que nos hayas enviado. No tenemos ni tendremos ninguna obligaciÃ³n (1) de mantener ningÃºn comentario confidencialmente; (2) de pagar compensaciÃ³n por comentarios; o (3) de responder a comentarios.' +
                      
                      'Nosotros podemos, pero no tenemos obligaciÃ³n de, monitorear, editar o remover contenido que consideremos sea ilegÃ­timo, ofensivo, amenazante, calumnioso, difamatorio, pornogrÃ¡fico, obsceno u objetable o viole la propiedad intelectual de cualquiera de las partes o los TÃ©rminos de Servicio.' +
                      
                      'Aceptas que tus comentarios no violarÃ¡n los derechos de terceras partes, incluyendo derechos de autor, marca, privacidad, personalidad u otro derechos personal o de propiedad. Asimismo, aceptas que tus comentarios no contienen material difamatorio o ilegal, abusivo u obsceno, o contienen virus informÃ¡ticos u otro malware que pudiera, de alguna manera, afectar el funcionamiento del Srvicio o de cualquier sitio web relacionado.  No puedes utilizar una direcciÃ³n de correo electrÃ³nico falsa, usar otra identidad que no sea legÃ­tima, o engaÃ±ar a terceras partes o a nosotros en cuanto al origen de tus comentarios.  Tu eres el Ãºnico responsable por los comentarios que haces y su precisiÃ³n.  No nos hacemos responsables y no asumimos ninguna obligaciÃ³n con respecto a los comentarios publicados por ti o cualquier tercer parte.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 10 - INFORMACIÃN PERSONAL</h5>' +
                  '<p>' +
                      'Tu presentaciÃ³n de informaciÃ³n personal a travÃ©s del sitio se rige por nuestra PolÃ­tica de Privacidad. Para ver nuestra PolÃ­tica de Privacidad.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 11 - ERRORES, INEXACTITUDES Y OMISIONES</h5>' +
                  '<p>' +
                      'De vez en cuando puede haber informaciÃ³n en nuestro sitio o en el Servicio que contiene errores tipogrÃ¡ficos, inexactitudes u omisiones que puedan estar relacionadas con las descripciones de productos, precios, promociones, ofertas, gastos de envÃ­o del producto, el tiempo de trÃ¡nsito y la disponibilidad. Nos reservamos el derecho de corregir los errores, inexactitudes u omisiones y de cambiar o actualizar la informaciÃ³n o cancelar pedidos si alguna informaciÃ³n en el Servicio o en cualquier sitio web relacionado es inexacta en cualquier momento sin previo aviso (incluso despuÃ©s de que hayas enviado tu orden) .' +
                      
                      'No asumimos ninguna obligaciÃ³n de actualizar, corregir o aclarar la informaciÃ³n en el Servicio o en cualquier sitio web relacionado, incluyendo, sin limitaciÃ³n, la informaciÃ³n de precios, excepto cuando sea requerido por la ley. Ninguna especificaciÃ³n actualizada o fecha de actualizaciÃ³n aplicada en el Servicio o en cualquier sitio web relacionado, debe ser tomada para indicar que toda la informaciÃ³n en el Servicio o en cualquier sitio web relacionado ha sido modificado o actualizado.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 12 - USOS PROHIBIDOS</h5>' +
                  '<p>' +
                      'En adiciÃ³n a otras prohibiciones como se establece en los TÃ©rminos de Servicio, se prohibe el uso del sitio o su contenido: (a) para ningÃºn propÃ³sito ilegal; (b) para pedirle a otros que realicen o partiicpen en actos ilÃ­citos; (c) para violar cualquier regulaciÃ³n, reglas, leyes internacionales, federales, provinciales o estatales, u ordenanzas locales; (d) para infringir o violar el derecho de propiedad intelectual nuestro o de terceras partes; (e) para acosar, abusar, insultar, daÃ±ar, difamar, calumniar, desprestigiar, intimidar o discriminar por razones de gÃ©nero, orientaciÃ³n sexual, religiÃ³n, tnia, raza, edad, nacionalidad o discapacidad; (f) para presentar informaciÃ³n falsa o engaÃ±osa; (g) para cargar o transmitir virus o cualquier otro tipo de cÃ³digo malicioso que sea o pueda ser utilizado en cualquier forma que pueda comprometer la funcionalidad o el funcionamientodel Servicio o de cualquier sitio web relacionado, otros sitios o Internet; (h) para recopilar o rastrear informaciÃ³n personal de otros; (i) para generar spam, phish, pharm, pretext, spider, crawl, or scrape; (j) para cualquier propÃ³sito obsceno o inmoral; o (k) para interferir con o burlar los elementos de seguridad del Servicio o cualquier sitio web relacionadoÂ¿ otros sitios o Internet. Nos reservamos el derecho de suspender el uso del Servicio o de cualquier sitio web relacionado por violar cualquiera de los Ã­tems de los usos prohibidos.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 13 - EXCLUSIÃN DE GARANTÃAS; LIMITACIÃN DE RESPONSABILIDAD</h5>' +
                  '<p>' +
                      'No garantizamos ni aseguramos que el uso de nuestro servicio serÃ¡ ininterrumpido, puntual, seguro o libre de errores.' +
                      
                      'No garantizamos que los resultados que se puedan obtener del uso del servicio serÃ¡n exactos o confiables.' +
                      
                      'Aceptas que de vez en cuando podemos quitar el servicio por perÃ­odos de tiempo indefinidos o cancelar el servicio en cualquier momento sin previo aviso.' +
                      
                      'Aceptas expresamenteque el uso de, o la posibilidad de utilizar, el servicio es bajo tu propio riesgo.  El servicio y todos los productos y servicios proporcionados a travÃ©s del servicio son (salvo lo expresamente manifestado por nosotros) proporcionados "tal cual" y "segÃºn estÃ© disponible" para su uso, sin ningÃºn tipo de representaciÃ³n, garantÃ­as o condiciones de ningÃºn tipo, ya sea expresa o implÃ­cita, incluÃ­das todas las garantÃ­as o condiciones implÃ­citas de comercializaciÃ³n, calidad comercializable, la aptitud para un propÃ³sito particular, durabilidad, tÃ­tulo y no infracciÃ³n.' +
                      
                      'En ningÃºn caso Genoveva, nuestros directores, funcionarios, empleados, afiliados, agentes, contratistas, internos, proveedores, prestadores de servicios o licenciantes serÃ¡n responsables por cualquier daÃ±o, pÃ©rdida, reclamo, o daÃ±os directos, indirectos, incidentales, punitivos, especiales o consecuentes de cualquier tipo, incluyendo, sin limitaciÃ³n, pÃ©rdida de beneficios, pÃ©rdida de igresos, pÃ©rdida de ahorros, pÃ©rdida de datos, costos de reemplazo, o cualquier daÃ±o similar, ya sea basado en contrato, agravio (incluyendo negligencia), responsabilidad estricta o de otra manera, como consecuencia del uso de cualquiera de los servicios o productos adquiridos mediante el servicio, o por cualquier otro reclamo relacionado de alguna manera con el uso del servicio o cualquier producto, incluyendo pero no limitado, a cualquier error u omisiÃ³n en cualquier contenido, o cualquier pÃ©rdida o daÃ±o de cualquier tipo incurridos como resultados de la utilizaciÃ³n del servicio o cualquier contenido (o producto) publicado, transmitido, o que se pongan a disposiciÃ³n a travÃ©s del servicio, incluso si se avisa de su posibilidad.  Debido a que algunos estados o jurisdicciones no permiten la exclusiÃ³n o la limitaciÃ³n de responsabilidad por daÃ±os consecuenciales o incidentales, en tales estados o jurisdicciones, nuestra responsabilidad se limitarÃ¡ en la medida mÃ¡xima permitida por la ley.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 14 - INDEMNIZACIÃN</h5>' +
                  '<p>' +
                      'Aceptas indemnizar, defender y mantener indemne Genoveva y nuestras matrices, subsidiarias, afiliados, socios, funcionarios, directores, agentes, contratistas, concesionarios, proveedores de servicios, subcontratistas, proveedores, internos y empleados, de cualquier reclamo o demanda, incluyendo honorarios razonables de abogados, hechos por cualquier tercero a causa o como resultado de tu incumplimiento de las Condiciones de Servicio o de los documentos que incorporan como referencia, o la violaciÃ³n de cualquier ley o de los derechos de u tercero.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 15 - DIVISIBILIDAD</h5>' +
                  '<p>' +
                      'En el caso de que se determine que cualquier disposiciÃ³n de estas Condiciones de Servicio sea ilegal, nula o inejecutable, dicha disposiciÃ³n serÃ¡, no obstante, efectiva a obtener la mÃ¡xima medida permitida por la ley aplicable, y la parte no exigible se considerarÃ¡ separada de estos TÃ©rminos de Servicio, dicha determinaciÃ³n no afectarÃ¡ la validez de aplicabilidad de las demÃ¡s disposiciones restantes.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 16 - RESCISIÃN</h5>' +
                  '<p>' +
                      'Las obligaciones y responsabilidades de las partes que hayan incurrido con anterioridad a la fecha de terminaciÃ³n sobrevivirÃ¡n a la terminaciÃ³n de este acuerdo a todos los efectos.' +
                      
                      'Estas Condiciones de servicio son efectivos a menos que y hasta que sea terminado por ti o nosotros. Puedes terminar estos TÃ©rminos de Servicio en cualquier momento por avisarnos que ya no deseas utilizar nuestros servicios, o cuando dejes de usar nuestro sitio.' +
                      
                      'Si a nuestro juicio, fallas, o se sospecha que haz fallado, en el cumplimiento de cualquier tÃ©rmino o disposiciÃ³n de estas Condiciones de Servicio, tambien podemos terminar este acuerdo en cualquier momento sin previo aviso, y seguirÃ¡s siendo responsable de todos los montos adeudados hasta incluÃ­da la fecha de terminaciÃ³n; y/o en consecuencia podemos negarte el acceso a nuestros servicios (o cualquier parte del mismo).' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 17 - ACUERDO COMPLETO</h5>' +
                  '<p>' +
                      'Nuestra falla para ejercer o hacer valer cualquier derecho o disposiciÃ´n de estas Condiciones de Servicio no constituirÃ¡ una renucia a tal derecho o disposiciÃ³n.' +
                      
                      'Estas Condiciones del servicio y las polÃ­ticas o reglas de operaciÃ³n publicadas por nosotros en este sitio o con respecto al servicio constituyen el acuerdo completo y el entendimiento entre tu y nosotros y rigen el uso del Servicio y reemplaza cualquier acuerdo, comunicaciones y propuestas anteriores o contemporÃ¡neas, ya sea oral o escrita, entre tu y nosotros (incluyendo, pero no limitado a, cualquier versiÃ³n previa de los TÃ©rminos de Servicio).' +
                      
                      'Cualquier ambigÃ¼edad en la interpretaciÃ³n de estas Condiciones del servicio no se interpretarÃ¡n en contra del grupo de redacciÃ³n.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 18 - LEY</h5>' +
                  '<p>' +
                      'Estas Condiciones del servicio y cualquier acuerdos aparte en el que te proporcionemos servicios se regirÃ¡n e interpretarÃ¡n en conformidad con las leyes Argentina.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 19 - CAMBIOS EN LOS TÃRMINOS DE SERVICIO</h5>' +
                  '<p>' +
                      'Puedes revisar la versiÃ³n mÃ¡s actualizada de los TÃ©rminos de Servicio en cualquier momento en esta pÃ¡gina.' +
                      
                      'Nos reservamos el derecho, a nuestra sola discreciÃ³n, de actualizar, modificar o reemplazar cualquier parte de estas Condiciones del servicio mediante la publicaciÃ³n de las actualizaciones y los cambios en nuestro sitio web. Es tu responsabilidad revisar nuestro sitio web periÃ³dicamente para verificar los cambios. El uso contÃ­nuo de o el acceso a nuestro sitio Web o el Servicio despuÃ©s de la publicaciÃ³n de cualquier cambio en estas Condiciones de servicio implica la aceptaciÃ³n de dichos cambios.' +
                  '</p>' +
                  '<hr>' +
                  '<h5>SECCIÃN 20 - INFORMACIÃN DE CONTACTO</h5>' +
                  '<p>' +
                      'Preguntas acerca de los TÃ©rminos de Servicio deben ser enviadas a <a style="cursor: pointer;" href="mailto:genovevashoponline@gmail.com">genovevashoponline@gmail.com</a>.' +
                  '</p>' +
                  '<hr>' +
                  '<p>' +
                '</div>' +
              '</div>' +
            '</div>' +
          '</div>' +
        '</div>',
      showCloseButton: true,
      // showCancelButton: true,
      // focusConfirm: false,
      confirmButtonText:
        'Entendido',
      // confirmButtonAriaLabel: 'Thumbs up, great!',
      // cancelButtonText:
      //   '<i class="fa fa-thumbs-down"></i>',
      // cancelButtonAriaLabel: 'Thumbs down',
    })
  }

  ngOnInit() {
    Swal.fire({
      title: "Las opciones de pago son ofrecidas por Mercado Pago " + '&reg;',
      type: "info"
    });
    // borro los campos si selecciono otro medio de pago y muestro el boton de pago de acuerdo a opcion desplegada
    setTimeout(() => {
      const mediosDePago = document.querySelectorAll('.medioDePago');
      const tarjetaCredito = document.querySelector('.tarjetaCredito');
      const tarjetaDebito = document.querySelector('.tarjetaDebito');
      const efectivo = document.querySelector('.efectivo');
      const domicilio = document.querySelector('.domicilio');
      mediosDePago.forEach(caja => {
        caja.addEventListener('click', () => {
          setTimeout(() => {
            if (tarjetaCredito) {
              if (!tarjetaCredito.classList.contains('show')) {
                // oculto Tarjeta de credito
                this.esPagoConCredito = false;
                // this.esPagoConDebito = false;
                // this.esPagoEnEfectivo = false;
                // this.esPagoPorDomicilio = false;
                const todosLosInput = tarjetaCredito.getElementsByTagName(
                  'input'
                );
                const todosLosSelect = tarjetaCredito.getElementsByTagName(
                  'select'
                );
                for (let i = 0; i < todosLosInput.length; i++) {
                  const input: any = todosLosInput[i];
                  input.value = '';
                }
                for (let i = 0; i < todosLosSelect.length; i++) {
                  const select = todosLosSelect[i];
                  select.value = '';
                  this.opcionDoc = '';
                }
              } else {
                let dentroCasco: any = document.querySelector('#dentroCasco');
                if (this.validarFormEnvio() === true) {
                  // hay campos vacios
                  Swal.fire({
                    title: 'Tenes que completar el formulario de envio y aceptar los tÃ©rminos y condiciones',
                    text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, abonaras el envÃ­o cuando se entregue tu compra. Si no te encontras dentro del casco urbano de La Plata tu compra se te enviarÃ¡ a la sucursal de OCA mas cercana, donde vas a poder abonar el costo del envÃ­o en la misma'
                  }).then(() => {
                    tarjetaCredito.classList.remove('show');
                    return;
                  });
                } else {
                  // no hay campos vacios
                  setTimeout(() => {
                    const documentosMP: any = this.tipoDocumentos;
                    const selectDoc: any = document.querySelector('#docType');
                    selectDoc.addEventListener('change', () => {
                      documentosMP.forEach((doc: any) => {
                        if (doc.id === selectDoc.value) {
                          const inputDoc: any = document.querySelector(
                            '.' + doc.id
                          );
                          this.opcionDoc = selectDoc.value;
                        } else {
                          const inputDoc: any = document.querySelector(
                            '.' + doc.id
                          );
                        }
                      });
                    });
                    this.funcionesMercadoPago('.comprarCredito');
                    // this.funcionesMercadoPago('.comprarCredito', dentroCasco);
                  }, 500);
                }
                
                // se muestra pago por tarjeta de credito
                // let dentroCasco: any = document.querySelector('#dentroCasco');
                // let cp: any = document.querySelector('#postcode');
                // if (dentroCasco.checked === false && this.validarFormEnvio() === true) {
                //   if (dentroCasco.checked === false && this.validarFormEnvio() === true) {
                //     Swal.fire({
                //       title: 'Tenes que completar el formulario de envio',
                //       // title: 'Tenes que seleccionar una opciÃ³n de envÃ­o',
                //       text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, si no ingresÃ¡ tu CÃ³digo Postal'
                //     }).then(() => {
                //       tarjetaCredito.classList.remove('show');
                //       return;
                //     });
                //   }
                //   dentroCasco.addEventListener('click', () => {
                //     if (dentroCasco.checked === false && this.envio.costo === 0) {
                //       Swal.fire({
                //         title: 'Tenes que seleccionar una opciÃ³n de envÃ­o',
                //         text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, si no ingresÃ¡ tu CÃ³digo Postal'
                //       }).then(() => {
                //         tarjetaCredito.classList.remove('show');
                //         return;
                //       });
                //     }
                //   });
                //   cp.addEventListener('change', () => {
                //     if (cp.value === '' && dentroCasco.checked === false) {
                //       this.envio.costo = 0;
                //       Swal.fire({
                //         title: 'Tenes que seleccionar una opciÃ³n de envÃ­o',
                //         text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, si no ingresÃ¡ tu CÃ³digo Postal'
                //       }).then(() => {
                //         tarjetaCredito.classList.remove('show');
                //         return;
                //       });
                //     }
                //   });
                // } else {
                //   setTimeout(() => {
                //     const documentosMP: any = this.tipoDocumentos;
                //     const selectDoc: any = document.querySelector('#docType');
                //     selectDoc.addEventListener('change', () => {
                //       documentosMP.forEach((doc: any) => {
                //         if (doc.id === selectDoc.value) {
                //           const inputDoc: any = document.querySelector(
                //             '.' + doc.id
                //           );
                //           this.opcionDoc = selectDoc.value;
                //         } else {
                //           const inputDoc: any = document.querySelector(
                //             '.' + doc.id
                //           );
                //         }
                //       });
                //     });
                //     this.funcionesMercadoPago('.comprarCredito', dentroCasco);
                //   }, 500);
                // }

                this.opcionDoc = '';
                this.esPagoConCredito = true;
                this.esPagoConDebito = false;
                this.esPagoEnEfectivo = false;
                this.esPagoPorDomicilio = false;
              }
            }

            if (tarjetaDebito) {
              if (!tarjetaDebito.classList.contains('show')) {
                this.esPagoConDebito = false;

                const todosLosInput = tarjetaDebito.getElementsByTagName(
                  'input'
                );
                const todosLosSelect = tarjetaDebito.getElementsByTagName(
                  'select'
                );

                for (let i = 0; i < todosLosInput.length; i++) {
                  const input: any = todosLosInput[i];
                  input.value = '';
                }
                for (let i = 0; i < todosLosSelect.length; i++) {
                  const select = todosLosSelect[i];
                  select.value = '';
                  this.opcionDoc = '';
                }
              } else {

                let dentroCasco: any = document.querySelector('#dentroCasco');
                if (this.validarFormEnvio() === true) {
                  // hay campos vacios
                  Swal.fire({
                    title: 'Tenes que completar el formulario de envio y aceptar los tÃ©rminos y condiciones',
                    text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, abonaras el envÃ­o cuando se entregue tu compra. Si no te encontras dentro del casco urbano de La Plata tu compra se te enviarÃ¡ a la sucursal de OCA mas cercana, donde vas a poder abonar el costo del envÃ­o en la misma'
                  }).then(() => {
                    tarjetaDebito.classList.remove('show');
                    return;
                  });
                } else {
                  // no hay campos vacios
                  setTimeout(() => {
                    const documentosMP: any = this.tipoDocumentos;
                    const selectDoc: any = document.querySelector('#docType');
                    selectDoc.addEventListener('change', () => {
                      documentosMP.forEach((doc: any) => {
                        if (doc.id === selectDoc.value) {
                          const inputDoc: any = document.querySelector(
                            '.' + doc.id
                          );
                          this.opcionDoc = selectDoc.value;
                        } else {
                          const inputDoc: any = document.querySelector(
                            '.' + doc.id
                          );
                        }
                      });
                    });
                    this.funcionesMercadoPago('.comprarDebito');
                    // this.funcionesMercadoPago('.comprarDebito', dentroCasco);
                  }, 500);
                }

                // let dentroCasco: any = document.querySelector('#dentroCasco');
                // let cp: any = document.querySelector('#postcode');
                // if (dentroCasco.checked === false && this.envio.costo === 0) {
                //   if (dentroCasco.checked === false && this.envio.costo === 0) {
                //     Swal.fire({
                //       title: 'Tenes que seleccionar una opciÃ³n de envÃ­o',
                //       text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, si no ingresÃ¡ tu CÃ³digo Postal'
                //     }).then(() => {
                //       tarjetaDebito.classList.remove('show');
                //       return;
                //     });
                //   }
                //   dentroCasco.addEventListener('click', () => {
                //     if (dentroCasco.checked === false && this.envio.costo === 0) {
                //       Swal.fire({
                //         title: 'Tenes que seleccionar una opciÃ³n de envÃ­o',
                //         text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, si no ingresÃ¡ tu CÃ³digo Postal'
                //       }).then(() => {
                //         tarjetaDebito.classList.remove('show');
                //         return;
                //       });
                //     }
                //   });
                //   cp.addEventListener('change', () => {
                //     if (cp.value === '' && dentroCasco.checked === false) {
                //       this.envio.costo = 0;
                //       Swal.fire({
                //         title: 'Tenes que seleccionar una opciÃ³n de envÃ­o',
                //         text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, si no ingresÃ¡ tu CÃ³digo Postal'
                //       }).then(() => {
                //         tarjetaDebito.classList.remove('show');
                //         return;
                //       });
                //     }
                //   });
                // } else {
                //   setTimeout(() => {
                //     const documentosMP: any = this.tipoDocumentos;
                //     const selectDoc: any = document.querySelector('#docType');
                //     selectDoc.addEventListener('change', () => {
                //       documentosMP.forEach((doc: any) => {
                //         if (doc.id === selectDoc.value) {
                //           const inputDoc: any = document.querySelector(
                //             '.' + doc.id
                //           );
                //           this.opcionDoc = selectDoc.value;
                //         } else {
                //           const inputDoc: any = document.querySelector(
                //             '.' + doc.id
                //           );
                //         }
                //       });
                //     });
                //     this.funcionesMercadoPago('.comprarDebito', dentroCasco);
                //   }, 500);
                // }
                this.opcionDoc = '';
                this.esPagoConCredito = false;
                this.esPagoConDebito = true;
                this.esPagoEnEfectivo = false;
                this.esPagoPorDomicilio = false;
              }
            }

            if (efectivo) {
              if (!efectivo.classList.contains('show')) {
                // this.esPagoConCredito = false;
                // this.esPagoConDebito = false;
                this.esPagoEnEfectivo = false;
                const todosLosInput = tarjetaDebito.getElementsByTagName(
                  'input'
                );

                for (let i = 0; i < todosLosInput.length; i++) {
                  const input: any = todosLosInput[i];
                  input.value = '';
                }
              } else {

                let dentroCasco: any = document.querySelector('#dentroCasco');
                if (this.validarFormEnvio() === true) {
                  // hay campos vacios
                  Swal.fire({
                    title: 'Tenes que completar el formulario de envio y aceptar los tÃ©rminos y condiciones',
                    text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, abonaras el envÃ­o cuando se entregue tu compra. Si no te encontras dentro del casco urbano de La Plata tu compra se te enviarÃ¡ a la sucursal de OCA mas cercana, donde vas a poder abonar el costo del envÃ­o en la misma'
                  }).then(() => {
                    efectivo.classList.remove('show');
                    return;
                  });
                } else {
                  // no hay campos vacios
                  setTimeout(() => {
                    this.funcionesMercadoPago('.comprarEfectivo');
                    // this.funcionesMercadoPago('.comprarEfectivo', dentroCasco);
                  }, 500);
                }

                // let dentroCasco: any = document.querySelector('#dentroCasco');
                // let cp: any = document.querySelector('#postcode');
                // if (dentroCasco.checked === false && this.envio.costo === 0) {
                //   if (dentroCasco.checked === false && this.envio.costo === 0) {
                //     Swal.fire({
                //       title: 'Tenes que seleccionar una opciÃ³n de envÃ­o',
                //       text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, si no ingresÃ¡ tu CÃ³digo Postal'
                //     }).then(() => {
                //       efectivo.classList.remove('show');
                //       return;
                //     });
                //   }
                //   dentroCasco.addEventListener('click', () => {
                //     if (dentroCasco.checked === false && this.envio.costo === 0) {
                //       Swal.fire({
                //         title: 'Tenes que seleccionar una opciÃ³n de envÃ­o',
                //         text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, si no ingresÃ¡ tu CÃ³digo Postal'
                //       }).then(() => {
                //         efectivo.classList.remove('show');
                //         return;
                //       });
                //     }
                //   });
                //   cp.addEventListener('change', () => {
                //     if (cp.value === '' && dentroCasco.checked === false) {
                //       this.envio.costo = 0;
                //       Swal.fire({
                //         title: 'Tenes que seleccionar una opciÃ³n de envÃ­o',
                //         text: 'Si estas dentro del casco urbano de La Plata hace click en la casilla que se encuentra en la descripciÃ³n del envÃ­o, si no ingresÃ¡ tu CÃ³digo Postal'
                //       }).then(() => {
                //         efectivo.classList.remove('show');
                //         return;
                //       });
                //     }
                //   })
                // } else {
                //   setTimeout(() => {
                //       this.funcionesMercadoPago('.comprarEfectivo', dentroCasco);
                //   }, 500);
                // }
                console.log('se ve efectivo');
                this.esPagoConCredito = false;
                this.esPagoConDebito = false;
                this.esPagoEnEfectivo = true;
                this.esPagoPorDomicilio = false;
              }
            }

            if (domicilio) {
              if (!domicilio.classList.contains('show')) {
                console.log('no se ve domicilio');
                // this.esPagoConCredito = false;
                // this.esPagoConDebito = false;
                // this.esPagoEnEfectivo = false;
                this.esPagoPorDomicilio = false;
                // const todosLosInput = tarjetaCredito.getElementsByTagName(
                //   "input"
                // );
                // const todosLosSelect = tarjetaCredito.getElementsByTagName(
                //   "select"
                // );
                // for (let i = 0; i < todosLosInput.length; i++) {
                //   const input: any = todosLosInput[i];
                //   input.value = "";
                // }
                // for (let i = 0; i < todosLosSelect.length; i++) {
                //   const select = todosLosSelect[i];
                //   select.value = "";
                // }
              } else {
                console.log('se ve domicilio');
                this.esPagoConCredito = false;
                this.esPagoConDebito = false;
                this.esPagoEnEfectivo = false;
                this.esPagoPorDomicilio = true;
              }
            }
          }, 500);
        });
      });
    }, 500);

    // hago esto para ver si hay algun producto en el carrito, si no lo hay, lo redirijo al shop
    if (isPlatformBrowser(this.platformId)) {
      let carritoDeComprasLS = JSON.parse(localStorage.getItem('carritoDeCompras'));
      // si es > 0 hay productos
      let hayProductos = 0;
      carritoDeComprasLS.forEach(element => {
        if (element.userId == localStorage.getItem('userId')) {
          if (element.orden_id == 0) {
            hayProductos++;
          }
        }
        console.log(hayProductos);
      });
      console.log(hayProductos);
      if (hayProductos === 0) {
        Swal.fire({
          title: 'No tenes ningÃºn producto en el carrito',
          text: 'Te redirijimos a nuestro shop para que puedas agregar productos!'
        });
        this.router.navigate(['/shop']);
      }


      let verTerminosYcondiciones = document.querySelector('.termYcondiciones');

      verTerminosYcondiciones.addEventListener('click', () => {
        this.verTerminosCondiciones();
      })
    }
    // fin

    this.contenido = "En esta seccion vas a poder hacer el checkout de tu compra, es decir, vas a poder decirnos a donde queres que enviemos lo que compraste y elegir alguno de los medios de pago que nos proporciona Mercado Libre a traves de Mercado Pago. Recorda que si estas dentro del casco urbano de La Plata el envio es mas barato. Cualquier duda que tengas en esta parte consulta la seccion de preguntas frecuentes. Gracias por comprar en Genoveva Shop Online";
    this.productosService.editarMetaHead(this.contenido);

    this.tituloPag = "Finalizar compra";
    this.productosService.editarTitulo(this.tituloPag);

    let todoElCarro = document.querySelector('.right-side-cart-area');
    let botonBolsa: any = document.querySelector('#rightSideCart');

    if (todoElCarro.classList.value.includes('cart-on')) { 
      botonBolsa.click();
    } else {
      console.log('no esta abierta');
    }
  }

  ngOnDestroy() {
    this.productosService.reiniciarMetaHead(this.contenido);
    this.productosService.reiniciarTitulo(this.tituloPag);
  }

  ngDoCheck() {
    if (isPlatformBrowser(this.platformId)) {
      const todosLosProductosJson = JSON.parse(
        localStorage.getItem('todosLosProductos')
      );
      let carritos: any;
      carritos = this.carritoService.getCarrito();
      if (this.productosCarrito.length !== carritos.length) {
        this.productosCarrito = [];
        this.subTotal = 0;
        todosLosProductosJson.forEach(producto => {
          carritos.forEach(carrito => {
            if (carrito.orden_id === 0) {
              if (producto.id == carrito.productId) {
                this.productosCarrito.push(producto);
                if (!producto.descuento) {
                  // console.log('entra3');
                  this.subTotal = this.subTotal + producto.precio;
                  this.subTotal = Math.round(this.subTotal * 100) / 100;
                } else {
                  // console.log('entra4');
                  const descuento = (producto.descuento / 100) * producto.precio;
                  this.subTotal = this.subTotal + (producto.precio - descuento);
                  this.subTotal = Math.round(this.subTotal * 100) / 100;
                }
              }
            }
          });
        });
      }
    }
  }
}
